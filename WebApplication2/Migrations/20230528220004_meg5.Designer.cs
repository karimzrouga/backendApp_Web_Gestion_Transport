// <auto-generated />
using System;
using Gestpsfe.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace WebApplication2.Migrations
{
    [DbContext(typeof(PfeContext))]
    [Migration("20230528220004_meg5")]
    partial class meg5
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AgencePlanificationParAgence", b =>
                {
                    b.Property<int>("AgencesAgenceId")
                        .HasColumnType("int");

                    b.Property<int>("PlanificationsId")
                        .HasColumnType("int");

                    b.HasKey("AgencesAgenceId", "PlanificationsId");

                    b.HasIndex("PlanificationsId");

                    b.ToTable("AgencePlanificationParAgence");
                });

            modelBuilder.Entity("CircuitStation", b =>
                {
                    b.Property<int>("CircuitsCircuitId")
                        .HasColumnType("int");

                    b.Property<int>("StationsStationId")
                        .HasColumnType("int");

                    b.HasKey("CircuitsCircuitId", "StationsStationId");

                    b.HasIndex("StationsStationId");

                    b.ToTable("CircuitStation");
                });

            modelBuilder.Entity("Gestpsfe.Models.Agence", b =>
                {
                    b.Property<int>("AgenceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AgenceId"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Matricule")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RaisonSocial")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AgenceId");

                    b.ToTable("Agences");
                });

            modelBuilder.Entity("Gestpsfe.Models.Circuit", b =>
                {
                    b.Property<int>("CircuitId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CircuitId"));

                    b.Property<string>("CircuitName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Cout")
                        .HasColumnType("float");

                    b.HasKey("CircuitId");

                    b.ToTable("Circuits");
                });

            modelBuilder.Entity("Gestpsfe.Models.Cotisation", b =>
                {
                    b.Property<int>("CotisationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CotisationId"));

                    b.Property<DateTime>("Mois")
                        .HasColumnType("datetime2");

                    b.Property<double>("Montant")
                        .HasColumnType("float");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("CotisationId");

                    b.HasIndex("UserId");

                    b.ToTable("Cotisations");
                });

            modelBuilder.Entity("Gestpsfe.Models.Facturation", b =>
                {
                    b.Property<int>("FacturationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FacturationId"));

                    b.Property<int>("AgenceId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateFacturation")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Montant")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("FacturationId");

                    b.HasIndex("AgenceId");

                    b.ToTable("Facturations");
                });

            modelBuilder.Entity("Gestpsfe.Models.ListePlanification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Entre")
                        .HasColumnType("datetime2");

                    b.Property<string>("PlanificationName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Repos")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Sortie")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("ListePlanifications");
                });

            modelBuilder.Entity("Gestpsfe.Models.Permission", b =>
                {
                    b.Property<int>("PermissionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PermissionId"));

                    b.Property<int>("Consulte")
                        .HasColumnType("int");

                    b.Property<int>("Create")
                        .HasColumnType("int");

                    b.Property<int>("Delete")
                        .HasColumnType("int");

                    b.Property<int>("Update")
                        .HasColumnType("int");

                    b.HasKey("PermissionId");

                    b.ToTable("Permissions");
                });

            modelBuilder.Entity("Gestpsfe.Models.PlanificationParAgence", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Capacite")
                        .HasColumnType("int");

                    b.Property<int>("Nbbus")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("PlanificationParAgences");
                });

            modelBuilder.Entity("Gestpsfe.Models.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleId"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RoleId");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("Gestpsfe.Models.Shift", b =>
                {
                    b.Property<int>("ShiftId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ShiftId"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Entre")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Sortie")
                        .HasColumnType("datetime2");

                    b.HasKey("ShiftId");

                    b.ToTable("Shifts");
                });

            modelBuilder.Entity("Gestpsfe.Models.Station", b =>
                {
                    b.Property<int>("StationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StationId"));

                    b.Property<string>("Lieu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StationId");

                    b.ToTable("Stations");
                });

            modelBuilder.Entity("Gestpsfe.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ListePlanificationId")
                        .HasColumnType("int");

                    b.Property<string>("Matricule")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mdp")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PermissionId")
                        .HasColumnType("int");

                    b.Property<string>("Plansection")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RoleId")
                        .HasColumnType("int");

                    b.Property<double>("Salaire")
                        .HasColumnType("float");

                    b.Property<string>("Segment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ShiftId")
                        .HasColumnType("int");

                    b.Property<string>("Token")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ListePlanificationId");

                    b.HasIndex("PermissionId");

                    b.HasIndex("RoleId");

                    b.HasIndex("ShiftId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Gestpsfe.Models.Vehicule", b =>
                {
                    b.Property<int>("VehiculeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VehiculeId"));

                    b.Property<int>("AgenceId")
                        .HasColumnType("int");

                    b.Property<int>("Capacite")
                        .HasColumnType("int");

                    b.Property<string>("Immatricule")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("VehiculeId");

                    b.HasIndex("AgenceId");

                    b.ToTable("Vehicules");
                });

            modelBuilder.Entity("StationVehicule", b =>
                {
                    b.Property<int>("StationsStationId")
                        .HasColumnType("int");

                    b.Property<int>("VehiculesVehiculeId")
                        .HasColumnType("int");

                    b.HasKey("StationsStationId", "VehiculesVehiculeId");

                    b.HasIndex("VehiculesVehiculeId");

                    b.ToTable("StationVehicule");
                });

            modelBuilder.Entity("AgencePlanificationParAgence", b =>
                {
                    b.HasOne("Gestpsfe.Models.Agence", null)
                        .WithMany()
                        .HasForeignKey("AgencesAgenceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Gestpsfe.Models.PlanificationParAgence", null)
                        .WithMany()
                        .HasForeignKey("PlanificationsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CircuitStation", b =>
                {
                    b.HasOne("Gestpsfe.Models.Circuit", null)
                        .WithMany()
                        .HasForeignKey("CircuitsCircuitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Gestpsfe.Models.Station", null)
                        .WithMany()
                        .HasForeignKey("StationsStationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Gestpsfe.Models.Cotisation", b =>
                {
                    b.HasOne("Gestpsfe.Models.User", "User")
                        .WithMany("Cotisations")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Gestpsfe.Models.Facturation", b =>
                {
                    b.HasOne("Gestpsfe.Models.Agence", "Agence")
                        .WithMany("Facturations")
                        .HasForeignKey("AgenceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Agence");
                });

            modelBuilder.Entity("Gestpsfe.Models.User", b =>
                {
                    b.HasOne("Gestpsfe.Models.ListePlanification", "Planification")
                        .WithMany("Users")
                        .HasForeignKey("ListePlanificationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Gestpsfe.Models.Permission", "Permission")
                        .WithMany("Users")
                        .HasForeignKey("PermissionId");

                    b.HasOne("Gestpsfe.Models.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId");

                    b.HasOne("Gestpsfe.Models.Shift", "Shift")
                        .WithMany("Users")
                        .HasForeignKey("ShiftId");

                    b.Navigation("Permission");

                    b.Navigation("Planification");

                    b.Navigation("Role");

                    b.Navigation("Shift");
                });

            modelBuilder.Entity("Gestpsfe.Models.Vehicule", b =>
                {
                    b.HasOne("Gestpsfe.Models.Agence", "Agence")
                        .WithMany("Vehicules")
                        .HasForeignKey("AgenceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Agence");
                });

            modelBuilder.Entity("StationVehicule", b =>
                {
                    b.HasOne("Gestpsfe.Models.Station", null)
                        .WithMany()
                        .HasForeignKey("StationsStationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Gestpsfe.Models.Vehicule", null)
                        .WithMany()
                        .HasForeignKey("VehiculesVehiculeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Gestpsfe.Models.Agence", b =>
                {
                    b.Navigation("Facturations");

                    b.Navigation("Vehicules");
                });

            modelBuilder.Entity("Gestpsfe.Models.ListePlanification", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("Gestpsfe.Models.Permission", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("Gestpsfe.Models.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("Gestpsfe.Models.Shift", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("Gestpsfe.Models.User", b =>
                {
                    b.Navigation("Cotisations");
                });
#pragma warning restore 612, 618
        }
    }
}
